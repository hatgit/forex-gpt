openapi: 3.0.1
info:
  title: Forex Rates powered by OpenAI
  description: Unleash Forex Rates; Advanced analysis for currency markets. Gain insights, sentiment evaluation, and text completion.
  version: 'v1'
servers:
  - url: https://live.forex-gpt.ai
oanda:
  hostname: api-fxpractice.oanda.com
  streaming_hostname: stream-fxpractice.oanda.com
  port: 443
  ssl: true
  token: YOUR_OANDA_TOKEN
  username: YOUR_OANDA_USERNAME
  accounts:
    - YOUR_ACCOUNT_ID_1
    - YOUR_ACCOUNT_ID_2
  active_account: YOUR_ACTIVE_ACCOUNT_ID
paths:
  /analyze:
    post:
      operationId: analyze
      x-openai-isConsequential: false
      summary: Analyze text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/analyzeRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analyzeResponse'
  /generate:
    post:
      operationId: generate
      x-openai-isConsequential: false
      summary: Generate text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generateResponse'
  /complete:
    post:
      operationId: complete
      x-openai-isConsequential: false
      summary: Complete text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/completeRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/completeResponse'
  /search:
    post:
      operationId: search
      summary: Search for text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
  /playground:
    post:
      operationId: playground
      x-openai-isConsequential: false
      summary: Use the OpenAI playground
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playgroundRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playgroundResponse'
  /prices:
    post:
      operationId: prices
      x-openai-isConsequential: false
      summary: Get historical prices from the OANDA API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricesResponse'
components:
  schemas:
    analyzeRequest:
      type: object
      required: 
        - text
      properties:
        text:
          type: string
          description: The text to analyze.
        entities:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of entity.
              start:
                type: integer
                description: The start index of the entity.
              end:
                type: integer
                description: The end index of the entity.
              text:
                type: string
                description: The text of the entity.
    analyzeResponse:
      type: object
      properties:
        sentiment:
          type: string
          description: The overall market sentiment based on the analysis.
        smas:
          type: object
          additionalProperties:
            type: number
          description: A dictionary of Simple Moving Averages (SMAs) for various periods.
        error:
          type: string
          description: Error message in case the analysis fails.
    generateRequest:
      type: object
      required: 
        - prompt
      properties:
        prompt:
          type: string
          description: The prompt for the generator.
        temperature:
          type: number
          format: float
          description: The temperature of the generator.
          default: 0.5
    generateResponse:
      type: object
      properties:
        generated_text:
          type: string
          description: The generated text.
    completeRequest:
      type: object
      required: 
        - text
      properties:
        text:
          type: string
          description: The text to complete.
    completeResponse:
      type: object
      properties:
        completed_text:
          type: string
          description: The completed text.
    searchRequest:
      type: object
      required: 
        - query
      properties:
        query:
          type: string
          description: The search query.
    searchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: The title of the search result.
              url:
                type: string
                description: The URL of the search result.
    playgroundRequest:
      type: object
      required: 
        - code
      properties:
        code:
          type: string
          description: The code to execute in the OpenAI playground.
    playgroundResponse:
      type: object
      properties:
        output:
          type: string
          description: The output of the code execution in the OpenAI playground.
    pricesRequest:
      type: object
      required: 
        - instrument
        - from_time
        - granularity
        - price
      properties:
        instrument:
          type: string
          description: The instrument to get historical prices for.
        from_time:
          type: string
          description: The start time for retrieving historical prices.
        granularity:
          type: string
          description: The granularity of the historical prices.
        price:
          type: string
          description: The price type to retrieve (e.g., BA, BC, BO).
    pricesResponse:
      type: object
      properties:
        prices:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                description: The timestamp of the price.
              bid:
                type: object
                properties:
                  o:
                    type: string
                    description: The open bid price.
                  h:
                    type: string
                    description: The high bid price.
                  l:
                    type: string
                    description: The low bid price.
                  c:
                    type: string
                    description: The close bid price.
              ask:
                type: object
                properties:
                  o:
                    type: string
                    description: The open ask price.
                  h:
                    type: string
                    description: The high ask price.
                  l:
                    type: string
                    description: The low ask price.
                  c:
                    type: string
                    description: The close ask price.
